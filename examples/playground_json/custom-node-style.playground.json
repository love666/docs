{"files":{"customNode.js":{"content":"class CustomNodeModel extends RectNodeModel {\n  initNodeData(data) {\n    super.initNodeData(data);\n    const { properties } = this;\n    this.width = properties.width || 150;\n    this.height = properties.height || 80;\n  }\n\n  setAttributes() {\n    const { x, y, properties } = this;\n    const { textHorizontalMove = 0, textVerticalMove = 0 } = properties;\n    this.text = {\n      ...this.text,\n      x: x + textHorizontalMove,\n      y: y + textVerticalMove,\n    }\n  }\n\n  getNodeStyle() {\n    const style = super.getNodeStyle();\n    const { properties } = this;\n    style.fill = properties.color || style.fill;\n    style.stroke = properties.strokeColor || style.stroke;\n    style.strokeWidth = properties.strokeWidth || style.strokeWidth;\n    return style;\n  }\n\n  getTextStyle() {\n    const style = super.getTextStyle();\n    const { properties } = this;\n    style.color = properties.textColor || style.color;\n    style.fontSize = properties.fontSize || style.fontSize;\n    return style;\n  }\n}\n\nexport default {\n  type: 'custom-node',\n  view: RectNode,\n  model: CustomNodeModel,\n}"},"index.html":{"content":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <link rel=\"stylesheet\" href=\"//unpkg.com/@logicflow/core/dist/style/index.css\" />\n  <link rel=\"stylesheet\" href=\"./style.css\" />\n  <style>\n    html, body {\n      height: 100%;\n      margin: 0;\n      padding: 0;\n    }\n    #container {\n      height: calc(100% - 20px);\n      width: 100%;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"container\"></div>\n  <div class=\"custom-node-style\">\n    <div class=\"custom-node-fill\">\n      节点填充色：\n      <div class=\"custom-red\" onclick=\"handleColorChange('node', 'red')\"></div>\n      <div class=\"custom-blue\" onclick=\"handleColorChange('node', 'blue')\"></div>\n      <div class=\"custom-green\" onclick=\"handleColorChange('node', 'green')\"></div>\n    </div>\n    <div class=\"custom-node-stroke\">\n      节点边框色：\n      <div class=\"custom-red\" onclick=\"handleColorChange('stroke', 'red')\"></div>\n      <div class=\"custom-blue\" onclick=\"handleColorChange('stroke', 'blue')\"></div>\n      <div class=\"custom-green\" onclick=\"handleColorChange('stroke', 'green')\"></div>\n    </div>\n    <div class=\"custom-stroke-width\">\n      节点边框宽度：\n      <input type=\"text\" oninput=\"handleStrokeWidth(this)\">\n    </div>\n    <div class=\"custom-node-size\">\n      节点大小：<br>\n      width: <input type=\"text\" oninput=\"handleNodeWidth(this)\">\n      height: <input type=\"text\" oninput=\"handleNodeHeight(this)\">\n    </div>\n    <div class=\"custom-text-color\">\n      文本颜色：\n      <div class=\"custom-red\" onclick=\"handleColorChange('text', 'red')\"></div>\n      <div class=\"custom-blue\" onclick=\"handleColorChange('text', 'blue')\"></div>\n      <div class=\"custom-green\" onclick=\"handleColorChange('text', 'green')\"></div>\n    </div>\n    <div class=\"custom-text-size\">\n      文本字体大小：<input type=\"text\" oninput=\"handleFontSize(this)\">\n    </div>\n    <div class=\"custom-text-position\">\n      文本位置（基于节点位置平移距离）：<br>\n      水平：<input type=\"text\" oninput=\"handleHorizontalMove(this)\">\n      垂直：<input type=\"text\" oninput=\"handleVerticalMove(this)\">\n    </div>\n  </div>\n  <script src=\"//unpkg.com/@logicflow/core/dist/logic-flow.js\"></script>\n  <script type=\"module\" src=\"./index.js\"></script>\n</body>\n</html>"},"index.js":{"content":"import customNode from \"./customNode.js\";\n\n// logicflow流程图配置\nconst LFConfig = {\n  edgeTextDraggable: true,\n  adjustEdgeMiddle: true,\n  hoverOutline: false,\n  nodeSelectedOutline: false,\n  hideAnchors: true,\n  background: {\n    backgroundImage:\n            \"url('https://dpubstatic.udache.com/static/dpubimg/805efa14-d908-4332-a7a2-bee8fbb903e3.jpg')\",\n    backgroundRepeat: 'repeat',\n  },\n  grid: {\n    size: 1,\n    visible: false,\n  },\n  keyboard: {\n    enabled: true,\n  },\n};\nconst container = document.querySelector('#container');\n\nconst lf = new LogicFlow({\n  ...LFConfig,\n  // 容器\n  container,\n  // 指定画布区域的宽高，默认使用容器宽高\n  width: 1000,\n  height: 1000,\n});\n\nlf.register(customNode);\n\nconst nodeData = {\n  id: '1',\n  x: 200,\n  y: 200,\n  type: 'custom-node',\n  text: '自定义节点样式',\n  properties: {},\n};\n\nconst render = (node) => {\n  lf.render({\n    nodes: [\n      node,\n    ]\n  });\n}\nrender(nodeData);\n\nwindow.handleColorChange = (type, color) => {\n  switch (type) {\n    case 'node':\n      nodeData.properties = {\n        ...nodeData.properties,\n        color,\n      };\n      break;\n    case 'stroke':\n      nodeData.properties = {\n        ...nodeData.properties,\n        strokeColor: color,\n      };\n      break;\n    case 'text':\n      nodeData.properties = {\n        ...nodeData.properties,\n        textColor: color,\n      };\n      break;\n    default:\n      break;\n  }\n  render(nodeData);\n}\n\nwindow.handleStrokeWidth = (el) => {\n  nodeData.properties = {\n    ...nodeData.properties,\n    strokeWidth: el.value,\n  };\n  render(nodeData);\n}\n\nwindow.handleNodeWidth = (el) => {\n  nodeData.properties = {\n    ...nodeData.properties,\n    width: el.value,\n  };\n  render(nodeData);\n}\n\nwindow.handleNodeHeight = (el) => {\n  nodeData.properties = {\n    ...nodeData.properties,\n    height: el.value,\n  };\n  render(nodeData);\n}\n\nwindow.handleFontSize = (el) => {\n  nodeData.properties = {\n    ...nodeData.properties,\n    fontSize: Number(el.value),\n  };\n  render(nodeData);\n}\n\nwindow.handleHorizontalMove = (el) => {\n  nodeData.properties = {\n    ...nodeData.properties,\n    textHorizontalMove: Number(el.value),\n  };\n  render(nodeData);\n}\n\nwindow.handleVerticalMove = (el) => {\n  nodeData.properties = {\n    ...nodeData.properties,\n    textVerticalMove: Number(el.value),\n  };\n  render(nodeData);\n}"},"style.css":{"content":".custom-node-style {\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 300px;\n  font-size: 14px;\n  margin: 20px;\n}\n\n.custom-node-style > div {\n  margin-bottom: 10px;\n}\n\n.custom-text-color,\n.custom-node-stroke,\n.custom-node-fill {\n  display: flex;\n}\n\n.custom-red {\n  width: 30px;\n  background-color: red;\n  cursor: pointer;\n  margin: 0 10px;\n}\n\n.custom-blue {\n  width: 30px;\n  background-color: blue;\n  cursor: pointer;\n  margin: 0 10px;\n}\n\n.custom-green {\n  width: 30px;\n  background-color: green;\n  cursor: pointer;\n  margin: 0 10px;\n}\n\ninput {\n  width: 70px;\n}"}}}