{"files":{"index.html":{"content":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <link rel=\"stylesheet\" href=\"//unpkg.com/@logicflow/core/dist/style/index.css\" />\n  <link rel=\"stylesheet\" href=\"./style.css\" />\n  <style>\n     html, body {\n      height: 100%;\n      margin: 0;\n      padding: 0;\n    }\n    #container {\n      height: calc(100% - 20px);\n      width: 100%;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"container\"></div>\n  <script src=\"//unpkg.com/@logicflow/core/dist/logic-flow.js\"></script>\n  <script src=\"//unpkg.com/vue@2.6.14/dist/vue.min.js\"></script>\n  <script type=\"module\" src=\"./index.js\"></script>\n</body>\n</html>"},"index.js":{"content":"import vueNode from './vueNode.js'\n\n// logicflow流程图配置\nconst LFConfig = {\n  edgeTextDraggable: true,\n  adjustEdgeMiddle: true,\n  hoverOutline: false,\n  nodeSelectedOutline: false,\n  hideAnchors: true,\n  background: {\n    backgroundImage:\n            \"url('https://dpubstatic.udache.com/static/dpubimg/805efa14-d908-4332-a7a2-bee8fbb903e3.jpg')\",\n    backgroundRepeat: 'repeat',\n  },\n  grid: {\n    size: 1,\n    visible: false,\n  },\n  keyboard: {\n    enabled: true,\n  },\n};\n\nconst lf = new LogicFlow({\n  ...LFConfig,\n  // 容器\n  container: document.querySelector('#container'),\n  // 指定画布区域的宽高，默认使用容器宽高\n  width: 1000,\n  height: 1000,\n});\n\nlf.register(vueNode);\n\nlf.on('custom:add-one', (model) => {\n  lf.setProperties(model.id, {\n    name: 'vueComponent',\n    body: model.getProperties().body + 1,\n  });\n});\n\nlf.on('custom:delete-one', (model) => {\n  lf.setProperties(model.id, {\n    name: 'vueComponent',\n    body: model.getProperties().body - 1,\n  });\n});\n\nconst nodeData = {\n  id: \"1\",\n  type: \"vue-node\",\n  x: 300,\n  y: 250,\n  properties: {\n    name: \"hello\",\n    body: Math.random(),\n  }\n};\n\nconst render = (node) => {\n  lf.render({\n    nodes: [\n      node,\n    ]\n  });\n}\nrender(nodeData);\n"},"style.css":{"content":".uml-wrapper {\n  background: #68fce2;\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n  border: 2px solid #838382;\n  box-sizing: border-box;\n}\n.uml-head {\n  text-align: center;\n  line-height: 30px;\n  font-size: 16px;\n  font-weight: bold;\n}\n.uml-body {\n  border-top: 1px solid #838382;\n  border-bottom: 1px solid #838382;\n  padding: 5px 10px;\n  font-size: 12px;\n}\n.uml-footer {\n  padding: 5px 10px;\n  font-size: 14px;\n}\n"},"vueComponent.js":{"content":"const template = `\n<div class=\"uml-wrapper\">\n  <div class=\"uml-head\">Head</div>\n  <div class=\"uml-body\">\n    <div><button @click=\"addOne\">+</button> <button @click=\"deleteOne\">-</button>    {{properties.name}}</div>\n    <div>{{properties.body}}</div>\n  </div>\n  <div class=\"uml-footer\">\n    <div>setHead(Head $head)</div>\n    <div>setBody(Body $body)</div>\n  </div>\n</div>\n`;\n\nexport default Vue.component('call', {\n  template,\n  props: {\n    properties: Object,\n    model: Object,\n    graphModel: Object,\n  },\n  methods: {\n    addOne() {\n      this.graphModel.eventCenter.emit(\"custom:add-one\", this.model);\n    },\n    deleteOne() {\n      this.graphModel.eventCenter.emit(\"custom:delete-one\", this.model);\n    }\n  },\n});\n"},"vueNode.js":{"content":"import vueComponent from \"./vueComponent.js\";\n\nclass CustomVueNode extends HtmlNode {\n  constructor (props) {\n    super(props)\n    this.root = document.createElement('div');\n    this.vueComponent = vueComponent;\n  }\n\n  setHtml(rootEl) {\n    rootEl.appendChild(this.root)\n    if (this.vm) {\n      this.vm.$mount(this.root)\n    } else {\n      this.vm = new Vue({\n        render: (h) => h(this.vueComponent, {\n          props: {\n            model: this.props.model,\n            graphModel: this.props.graphModel,\n            properties: this.props.model.properties\n          }\n        })\n      })\n      this.vm.$mount(this.root)\n    }\n  }\n}\n\nclass CustomVueModel extends HtmlNodeModel {\n  setAttributes() {\n    this.text.editable = false;\n    const width = 200;\n    const height = 130;\n    this.width = width;\n    this.height = height;\n\n    this.anchorsOffset = [\n      [width / 2, 0],\n      [0, height / 2],\n      [-width / 2, 0],\n      [0, -height/2],\n    ]\n  }\n}\n\nexport default {\n  type: 'vue-node',\n  view: CustomVueNode,\n  model: CustomVueModel,\n}"}}}